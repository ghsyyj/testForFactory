server:  port: 8011
# 数据源配置
spring:
  redis:
    database: 0
    host: 1
    port: 1
    password: 1
    jedis:      pool:
                 # 连接池最大连接数（使用负值表示没有限制）          max-active: 50
                 # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
                 # 连接池中的最大空闲连接  
        max-idle: 10
                 # 连接池中的最小空闲连接  
        min-idle: 0
    
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://111:111/test?characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
    username: 111
    password: 11@11
    driver-class-name: com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大    druid:      initial-size: 5
      min-idle: 5      max-active: 20
    # 配置获取连接等待超时的时间      max-wait: 60000          # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒      time-between-eviction-runs-millis: 60000      # 配置一个连接在池中最小生存的时间，单位是毫秒      min-evictable-idle-time-millis: 300000      validation-query: SELECT 1 FROM DUAL
      test-whileIdle: true
      testOn-borrow: false
      testOn-return: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-preparedStatements: true
      maxPool-preparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方      filter:        commons-log:          connection-logger-name: stat,wall          # 通过connectProperties属性来打开mergeSql功能；慢SQL记录      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000       # 合并多个DruidDataSource的监控数据      use-global-data-source-stat: true

# Mybatis 配置
mybatis:
  typeAliasesPackage: com.controller.mapper.*mapper
  mapperLocations: classpath:mybaties/mappers/*.xml#pageHelperpageHelper:  helperDialect: mysql  reasonable: true  support-methods-arguments: true  params: count,countSql
logging:  config: classpath:log4j2-spring.xml